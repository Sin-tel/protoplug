require("include/protoplug")
local Line = require("include/dsp/fdelay_line")
local Filter = require("include/dsp/cookbook filters")

local function Allpass()
	local a1, a2 = 0, 0
	local x1, x2 = 0, 0
	local y0, y1, y2 = 0, 0, 0

	local public = {
		update = function(w, r)
			a1 = -2 * r * math.cos(w)
			a2 = r * r
		end,
		process = function(x0)
			y2, y1 = y1, y0
			y0 = a2 * x0 + a1 * x1 + x2 - a1 * y1 - a2 * y2
			x2, x1 = x1, x0
			return y0
		end,
	}

	return public
end

-- stylua: ignore start
local r = { 0.9909917965216243, 0.9909917965216243, 0.9909547416988103, 0.990917688265172, 0.9908806362206748, 0.9908065362993117, 0.990732441934315, 0.9906583531253733, 0.9905472303290105, 0.9904361200321817, 0.9902879924117567, 0.9901028641288468, 0.9899547864938819, 0.9897697206854006, 0.9895476875208329, 0.9892517210189387, 0.9889928231763373, 0.9886600544041543, 0.988253489577777, 0.9878470925230937, 0.9873301024753344, 0.9867764859361481, 0.9860756856789559, 0.9853016983939179, 0.9842706644246235, 0.983056908714798, 0.981514304126433, 0.9794246618112824, 0.9764993784635272, 0.9719098904508959, 0.9633361543947336, 0.9315743249536605 }
local w = { 0.0038013651244948946, 0.011404095373484684, 0.019022533742823623, 0.02667238835286087, 0.034353659203596426, 0.04208205441537943, 0.04987328210855905, 0.05772734228313528, 0.06565994305945727, 0.07368679255787416, 0.08182359889873514, 0.0901017783227385, 0.09852133082988421, 0.1070822564201723, 0.11581597133430106, 0.12476959993331796, 0.13395885033757216, 0.14339943066741279, 0.15315417340423648, 0.1632544947887415, 0.17374751918197534, 0.18469607906533458, 0.19617871504056505, 0.2082896758297616, 0.2211703345160666, 0.23500918854366992, 0.25002615159745967, 0.2665982185658155, 0.28532229802200526, 0.30728225027012035, 0.33494425020497787, 0.3804192586157742 }
-- local r = { 0.9936633970991432, 0.9936262421535901, 0.9936633970991432, 0.9936262421535901, 0.9936262421535901, 0.9935890885999318, 0.9935890885999318, 0.9935519364380552, 0.9935519364380552, 0.993514785668087, 0.9934776362897468, 0.9934404883033138, 0.9934033417086602, 0.9934033417086602, 0.9933290526941797, 0.9932547692461413, 0.9932547692461413, 0.9931433545106012, 0.9931433545106012, 0.9930319522977991, 0.9929948210095837, 0.9928834354923021, 0.9928463097689266, 0.9927349409455937, 0.9926607020184169, 0.992549354059751, 0.9924380186184293, 0.9923638019447258, 0.992215385284672, 0.992104087389897, 0.9919557096623618, 0.9918444409643161, 0.9916590209364056, 0.9915107099333227, 0.9913624211670474, 0.991140029706321, 0.9909547416988103, 0.990732441934315, 0.9905101921745609, 0.9902879924117567, 0.9899547864938819, 0.9897327116880731, 0.9893626980495129, 0.9890298044203022, 0.9886600544041543, 0.988253489577777, 0.9877732201707352, 0.9872931850081159, 0.9867395892487341, 0.9861125574415436, 0.985412230641432, 0.9846019499539035, 0.9836819888640108, 0.9826526578237271, 0.9814409074965166, 0.9799374923549664, 0.9782169151449844, 0.9760248514168235, 0.9732189500817358, 0.9695508064286216, 0.9642729903301093, 0.9561246960903783, 0.9407398224463782, 0.8842255078205458 }
-- local w = { 0.002670380459355918, 0.008026849498416906, 0.013383318537477894, 0.01873978757653888, 0.024111964735949024, 0.029499850015708318, 0.03490344341581676, 0.04032274493627436, 0.0457577545770811, 0.05120847233823701, 0.05669060634009122, 0.062204156582643735, 0.06774912306589455, 0.07330979766949453, 0.07890188851379279, 0.08455681183948768, 0.09024315140588086, 0.09597661533332151, 0.10175720362180962, 0.10758491627134517, 0.11347546140227735, 0.11942883901460613, 0.1254450491083315, 0.13152409168345353, 0.1376816748603213, 0.1439177986389348, 0.15024817113964323, 0.15665708424209746, 0.16316024606664659, 0.16977336473363974, 0.176496440243077, 0.18332947259495833, 0.19028816990963288, 0.19738824030744978, 0.2046139756680599, 0.21199679223216156, 0.2195523981201039, 0.2272807933318869, 0.23519768598785973, 0.24330307608802243, 0.25164408799342236, 0.26022072170405963, 0.26904868534028326, 0.2781751032631409, 0.28759997547263233, 0.297354718209456, 0.30748645583465933, 0.3180266045889406, 0.3290065807129982, 0.3404892166882286, 0.3525373449960286, 0.36522950623814376, 0.3786599491366691, 0.3929229224136995, 0.4081440910320283, 0.4245276605561943, 0.4422935446710857, 0.4617401976633365, 0.4833388631434211, 0.5077335740456549, 0.5360081906741292, 0.5701419361928375, 0.6146587492623357, 0.6920526582226099 }

-- stylua: ignore end

local n = #w
print(n)

local feedback = 0.9
local balance = 1.0

local size = 1
local t_60 = 1.0

local ap = {}
for i = 1, n do
	-- print()
	ap[i] = Allpass()
	ap[i].update(w[i], r[i])
end

local delay1 = Line(8000)
local delay2 = Line(8000)

local k_ap = 0.625

local function allpass(s, apd, apl)
	local d = apd.goBack_int(apl)
	local v = s - k_ap * d
	apd.push(v)
	return k_ap * v + d
end

local shelf1 = Filter({
	type = "hs",
	f = 2000,
	gain = -3,
	Q = 0.5,
})

local apd1 = Line(500)
local apd2 = Line(500)

local apd1_l = 142
local apd2_l = 107

function plugin.processBlock(samples, smax)
	for k = 0, smax do
		local input_l = samples[0][k]
		local input_r = samples[1][k]

		local s_in = 0.5 * (input_l + input_r)

		local s1 = delay1.goBack(size * 4000)
		local s2 = delay2.goBack(size * 4000)

		for i = 1, n do
			s1 = ap[i].process(s1)
		end

		s1 = allpass(s1, apd1, apd1_l)

		s2 = shelf1.process(s2)
		s2 = allpass(s2, apd2, apd2_l)

		delay1.push(s2 * feedback + s_in)
		delay2.push(s1 * feedback + s_in)

		samples[0][k] = input_l * (1.0 - balance) + s1 * balance
		samples[1][k] = input_r * (1.0 - balance) + s2 * balance
	end
end

local function setFeedback(t)
	if t then
		t_60 = t
	end
	if t_60 > 15 then
		feedback = 1.0
	else
		feedback = 10 ^ (-(60 * 4000 * size) / (t_60 * 44100 * 20))
	end
end

params = plugin.manageParams({
	{
		name = "balance",
		min = 0,
		max = 1,
		default = 0.24,
		changed = function(val)
			balance = val
		end,
	},
	{
		name = "Size",
		min = 0.1,
		max = 1.00,
		default = 0.5,
		changed = function(val)
			size = val
			setFeedback()
		end,
	},
	{
		name = "Decay Time",
		min = 0.0,
		max = 1.0,
		default = 0.45,
		changed = function(val)
			setFeedback(2 ^ (8 * val - 4))
		end,
	},
	{
		name = "Diffusion",
		min = 0.0,
		max = 0.625,
		default = 0.15,
		changed = function(val)
			k_ap = val
		end,
	},
})
params.resetToDefaults()
